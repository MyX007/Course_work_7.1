services:
  web:
    build: .
    command: |
      bash -c "source venv/bin/activate"
      bash -c "python3 manage.py collectstatic --noinput"
      bash -c "python3 manage.py makemigrations"
      bash -c "python3 manage.py migrate"
      bash -c "python3 manage.py runserver 0.0.0.0:8000"
    environment:
      - DEBUG=True
      - DATABASE_HOST=db
    volumes:
      - .:/myapp
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env

  db:
    image: postgres:16.0
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    expose:
      - "5432"


  redis:
    image: redis:7
    volumes:
      - redis_data:/data
    env_file:
      - .env

  celery:
    build: .
    env_file:
      - .env
    depends_on:
      - redis
      - db
    command: |
       bash -c "celery -A config  worker --loglevel=info  --pool=eventlet"
    volumes:
      - .:/app


  celery_beat:
    build: .
    env_file:
      - .env
    command: |
       bash -c "celery -A config  beat --loglevel=info"
    depends_on:
      - redis
      - db
      - celery
    volumes:
      - .:/app

  nginx:
    build:
      context: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/myapp/staticfiles

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  media:
  static_volume:
  redis_data: